[{"name":"abstract suspend operator fun invoke(state: State, event: Event): State","description":"com.lift.bro.presentation.Reducer.invoke","location":"mvi/com.lift.bro.presentation/-reducer/invoke.html","searchKeys":["invoke","abstract suspend operator fun invoke(state: State, event: Event): State","com.lift.bro.presentation.Reducer.invoke"]},{"name":"class Interactor<State, Event>(initialState: State, source: Flow<State>, coroutineScope: CoroutineScope, reducers: List<Reducer<State, Event>>, sideEffects: List<SideEffect<State, Event>>, stateResolver: (initial: State, source: State) -> State = { _, s -> s })","description":"com.lift.bro.presentation.Interactor","location":"mvi/com.lift.bro.presentation/-interactor/index.html","searchKeys":["Interactor","class Interactor<State, Event>(initialState: State, source: Flow<State>, coroutineScope: CoroutineScope, reducers: List<Reducer<State, Event>>, sideEffects: List<SideEffect<State, Event>>, stateResolver: (initial: State, source: State) -> State = { _, s -> s })","com.lift.bro.presentation.Interactor"]},{"name":"constructor(initialState: State, source: Flow<State>, coroutineScope: CoroutineScope, reducers: List<Reducer<State, Event>>, sideEffects: List<SideEffect<State, Event>>, stateResolver: (initial: State, source: State) -> State = { _, s -> s })","description":"com.lift.bro.presentation.Interactor.Interactor","location":"mvi/com.lift.bro.presentation/-interactor/-interactor.html","searchKeys":["Interactor","constructor(initialState: State, source: Flow<State>, coroutineScope: CoroutineScope, reducers: List<Reducer<State, Event>>, sideEffects: List<SideEffect<State, Event>>, stateResolver: (initial: State, source: State) -> State = { _, s -> s })","com.lift.bro.presentation.Interactor.Interactor"]},{"name":"fun interface Reducer<State, Event>","description":"com.lift.bro.presentation.Reducer","location":"mvi/com.lift.bro.presentation/-reducer/index.html","searchKeys":["Reducer","fun interface Reducer<State, Event>","com.lift.bro.presentation.Reducer"]},{"name":"inline fun <State, Event> rememberInteractor(initialState: State, reducers: List<Reducer<State, Event>> = emptyList(), sideEffects: List<SideEffect<State, Event>> = emptyList(), viewModelScope: CoroutineScope = rememberCoroutineScope(), noinline stateResolver: (initial: State, source: State) -> State = { _, s -> s }, crossinline source: (State) -> Flow<State> = { flow { emit(initialState) } }): Interactor<State, Event>","description":"com.lift.bro.presentation.rememberInteractor","location":"mvi/com.lift.bro.presentation/remember-interactor.html","searchKeys":["rememberInteractor","inline fun <State, Event> rememberInteractor(initialState: State, reducers: List<Reducer<State, Event>> = emptyList(), sideEffects: List<SideEffect<State, Event>> = emptyList(), viewModelScope: CoroutineScope = rememberCoroutineScope(), noinline stateResolver: (initial: State, source: State) -> State = { _, s -> s }, crossinline source: (State) -> Flow<State> = { flow { emit(initialState) } }): Interactor<State, Event>","com.lift.bro.presentation.rememberInteractor"]},{"name":"operator fun invoke(event: Event): ChannelResult<Unit>","description":"com.lift.bro.presentation.Interactor.invoke","location":"mvi/com.lift.bro.presentation/-interactor/invoke.html","searchKeys":["invoke","operator fun invoke(event: Event): ChannelResult<Unit>","com.lift.bro.presentation.Interactor.invoke"]},{"name":"typealias SideEffect<State, Event> = suspend (State, Event) -> Unit","description":"com.lift.bro.presentation.SideEffect","location":"mvi/com.lift.bro.presentation/-side-effect/index.html","searchKeys":["SideEffect","typealias SideEffect<State, Event> = suspend (State, Event) -> Unit","com.lift.bro.presentation.SideEffect"]},{"name":"val state: StateFlow<State>","description":"com.lift.bro.presentation.Interactor.state","location":"mvi/com.lift.bro.presentation/-interactor/state.html","searchKeys":["state","val state: StateFlow<State>","com.lift.bro.presentation.Interactor.state"]}]