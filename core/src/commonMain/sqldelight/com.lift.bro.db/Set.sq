import kotlinx.datetime.Instant;

CREATE TABLE LiftingSet (
    id TEXT NOT NULL PRIMARY KEY,
    variationId TEXT NOT NULL,
    weight REAL,
    reps INTEGER,
    tempoDown INTEGER,
    tempoHold INTEGER,
    tempoUp INTEGER,
    date INTEGER AS Instant NOT NULL,
    notes TEXT NOT NULL,
    rpe INTEGER
);

getAllByVariation:
SELECT * FROM LiftingSet
WHERE variationId = ?
ORDER BY date DESC
LIMIT :limit;

getOneRepMaxForVariation:
SELECT * FROM LiftingSet
WHERE variationId = :variationId AND reps = 1
AND date < :before OR :before = NULL
ORDER BY weight DESC
LIMIT 1;

getEMaxForVariation:
SELECT * FROM LiftingSet
WHERE variationId = :variationId
AND date < :before OR :before = NULL
ORDER BY weight * reps DESC
LIMIT 1;

getMaxRepsForVariation:
SELECT * FROM LiftingSet
WHERE variationId = :variationId
AND date < :before OR :before = NULL
ORDER BY reps DESC
LIMIT 1;

getAll:
SELECT * FROM LiftingSet
WHERE date >= :startDate OR :startDate = NULL
AND date <= :endDate OR :endDate = NULL
AND variationId = :variationId OR :variationId = NULL
ORDER BY date DESC
LIMIT :limit;

getAllForLift:
SELECT * FROM LiftingSet
JOIN Variation ON Variation.id = LiftingSet.variationId
WHERE Variation.liftId = :liftId
AND date >= :startDate OR :startDate = NULL
AND date <= :endDate OR :endDate = NULL
ORDER BY date DESC
LIMIT :limit;

getByWorkoutId:
SELECT * FROM LiftingSet
JOIN ExerciseVariation ON ExerciseVariation.varationId = LiftingSet.variationId
JOIN Exercise ON Exercise.id = ExerciseVariation.exerciseId
JOIN Workout ON Workout.id = Exercise.workoutId
WHERE Workout.id = :workoutId
ORDER BY LiftingSet.date DESC
LIMIT :limit;

get:
SELECT * FROM LiftingSet WHERE id = ?;

save:
INSERT OR REPLACE
INTO LiftingSet(id, variationId, weight, reps, tempoDown, tempoHold, tempoUp, date, notes, rpe)
VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

deleteAllFromVariations:
DELETE FROM LiftingSet WHERE variationId = ?;

delete:
DELETE FROM LiftingSet WHERE id = ?;

deleteAll:
DELETE FROM LiftingSet;
